name: Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
  repository_dispatch:

jobs:
  pages:
    runs-on: ubuntu-latest
    name: Pages
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js LTS
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: npm

      - name: Install NPM packages
        run: npm ci

      - name: Build Pages
        run: npm run build

      - name: Publish to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3.7.0
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy --branch=${{ github.head_ref || github.ref_name }}

      - name: Check for Sentry availability
        id: sentry-check
        shell: bash
        run: |
          if [ "${{ secrets.SENTRY_DSN }}" != '' ]; then
            echo "sentry=true" >> $GITHUB_OUTPUT;
          else
            echo "sentry=false" >> $GITHUB_OUTPUT;
          fi

      - name: Setup Sentry
        uses: cloudflare/wrangler-action@v3.7.0
        if: ${{ steps.sentry-check.outputs.sentry == 'true' }}
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: --version
          secrets: |
            SENTRY_DSN
        env:
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}

      - name: Create a Sentry release
        uses: getsentry/action-release@v1
        continue-on-error: true
        if: ${{ steps.sentry-check.outputs.sentry == 'true' }}
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ vars.SENTRY_PROJECT }}
        with:
          environment: production
          sourcemaps: ./functions ./build
          set_commits: skip
